~~ Licensed to the Apache Software Foundation (ASF) under one or more
~~ contributor license agreements.  See the NOTICE file distributed with
~~ this work for additional information regarding copyright ownership.
~~ The ASF licenses this file to You under the Apache License, Version 2.0
~~ (the "License"); you may not use this file except in compliance with
~~ the License.  You may obtain a copy of the License at
~~
~~     http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

Eclipse Setup


* Installation

  * Install Classic Eclipse

  Follow the instruction for eclipse on from www.eclipse.org for the "Classic" eclipse version.

  * Install m2e for Maven Support

    * Go to "Help" and select "Install New Software..."
    
    * Select the Juno site resource.
    
    * Search for "Maven"
    
    * Install m2e.
    
    * Restart.

* Eclipse Configuration

  For VXQuery, the Hyracks project Eclipse formating template has been adopted as the standard. The 
  template file can be found at {{{http://hyracks.googlecode.com/files/HyracksCodeFormatProfile.xml}http://hyracks.googlecode.com/files/HyracksCodeFormatProfile.xml}}  
   
* Code Setup
  
  * Import Hyracks Code Base

    * Download and install the Hyracks Asterix Stabilization branch.

----------------------------------------
$ svn checkout https://hyracks.googlecode.com/svn/branches/fullstack_staging hyracks_for_vxquery
(Accept the certificate information for *.googlecode.com.)
$ cd hyracks_for_vxquery
$ mvn install -DskipTests
$ cd ..
----------------------------------------

    * From Eclipse Import the maven project.

  * Import VXQuery Code Base

    * Install VXQuery
  
    Follow the {{{user_installation.html}instructions}} for installing VXQuery. 
 
    * Import VXQuery
  
    Import VXQuery into eclipse a Maven Project. 
    
    * Additional Project Configuration
    
    Add "target/generated-sources/javacc" as a source folder in vxquery core.
    
* Debugging

  Eclipse can be used to debug VXQuery. Using the following java option will allow eclipse to pause the 
  execution and allow eclipse to step through the code.
  
  "-Xdebug -Xrunjdwp:transport=dt_socket,address=127.0.0.1:8000,server=y,suspend=y" 
  
  Realize you may need to update the address for your system. More details can be found at {{{http://www.ibm.com/developerworks/opensource/library/os-eclipse-javadebug/index.html}IBM}}

----------------------------------------
JAVA_OPTS="-Xmx1024m -Xdebug -Xrunjdwp:transport=dt_socket,address=127.0.0.1:8000,server=y,suspend=y" sh vxquery-cli/target/appassembler/bin/vxq ../test.xq -showoet
----------------------------------------

