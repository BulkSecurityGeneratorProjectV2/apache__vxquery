<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project name="vxquery" default="buildall" basedir=".">
    <property name="project.name" value="${ant.project.name}"/>
    
    <property name="build-resources.dir" value="${basedir}/build-resources"/>

    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="buildlib.dir" value="${build-resources.dir}/lib"/>

    <property name="src.dir" value="${basedir}/src"/>
    <property name="src.code.dir" value="${src.dir}/main/java"/>
    <property name="src.resources.dir" value="${src.dir}/main/resources"/>
    <property name="src.java.version" value="1.6"/>

    <property name="scripts.dir" value="${basedir}/scripts"/>

    <property name="tests.dir" value="${basedir}/src/test"/>
    <property name="tests.code.dir" value="${tests.dir}/java"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.class.dir" value="${build.dir}/class"/>
    <property name="build.tests.dir" value="${build.dir}/tests"/>
    <property name="build.tests.class.dir" value="${build.tests.dir}/class"/>
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.gen-src.dir" value="${build.dir}/gen-src"/>
    <property name="build.scripts.dir" value="${build.dir}/scripts"/>
    <property name="debug" value="on"/>

    <property name="store.dir" value="${basedir}/output"/>
    <property name="store.assets.dir" value="${store.dir}/assets"/>
    <property name="store.ftindex.dir" value="${store.dir}/ftindex"/>

    <property name="data.dir" value="${basedir}/data"/>
    <property name="data.lib.dir" value="${data.dir}/lib"/>

    <property name="javacc.home.dir" value="${build-resources.dir}/tools/javacc-4.1"/>

    <property name="xquery.jj.file" value="${src.dir}/main/javacc/xquery-grammar.jj"/>
    <property name="xquery.grammar.output.dir" value="${build.gen-src.dir}/org/apache/vxquery/xmlquery/query"/>

    <patternset id="lib.file.pattern">
        <include name="**/*.jar"/>
    </patternset>

    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <patternset refid="lib.file.pattern" />
        </fileset>
        <fileset dir="${buildlib.dir}">
            <patternset refid="lib.file.pattern"/>
        </fileset>
    </path>

    <path id="test.build.classpath">
        <path refid="build.classpath"/>
        <fileset dir="${build.lib.dir}">
            <patternset refid="lib.file.pattern"/>
        </fileset>
    </path>

    <path id="deploy.classpath">
        <fileset dir="${build.lib.dir}">
            <patternset refid="lib.file.pattern"/>
        </fileset>
    </path>

    <path id="run.classpath">
        <path refid="test.build.classpath"/>
        <pathelement location="${build.tests.class.dir}"/>
    </path>

    <target name="init">
        <tstamp/>
        <echo message="Using JDK ${ant.java.version} (${env.JAVA_HOME})"/>
        <echo message="Using ${ant.version} (${ant.home})" />
        <echo message="User Home: ${user.home}" />
        <mkdir dir="${build.class.dir}"/>
        <mkdir dir="${build.gen-src.dir}"/>
    </target>

    <target name="compile.gen">
        <mkdir dir="${xquery.grammar.output.dir}"/>
        <javacc target="${xquery.jj.file}" javacchome="${javacc.home.dir}" outputdirectory="${xquery.grammar.output.dir}"/>

        <mkdir dir="${build.gen-src.dir}/org/apache/vxquery/functions"/>
        <xslt in="${src.code.dir}/org/apache/vxquery/functions/builtin-functions.xml" out="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.qnames" style="${build-resources.dir}/scripts/generate-fn-qnames.xsl"/>
        <xslt in="${src.code.dir}/org/apache/vxquery/functions/builtin-functions.xml" out="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.functions" style="${build-resources.dir}/scripts/generate-fn-defns.xsl"/>
        <xslt in="${src.code.dir}/org/apache/vxquery/functions/builtin-functions.xml" out="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.function_collection" style="${build-resources.dir}/scripts/generate-fn-collection.xsl"/>
        <concat destfile="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java">
            <fileset file="${src.code.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.header"/>
            <fileset file="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.qnames"/>
            <fileset file="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.functions"/>
            <fileset file="${src.code.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.fncollection_begin"/>
            <fileset file="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.function_collection"/>
            <fileset file="${src.code.dir}/org/apache/vxquery/functions/BuiltinFunctions.java.footer"/>
        </concat>

        <xslt in="${src.code.dir}/org/apache/vxquery/functions/builtin-operators.xml" out="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinOperators.java.qnames" style="${build-resources.dir}/scripts/generate-op-qnames.xsl"/>
        <xslt in="${src.code.dir}/org/apache/vxquery/functions/builtin-operators.xml" out="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinOperators.java.operators" style="${build-resources.dir}/scripts/generate-op-defns.xsl"/>
        <concat destfile="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinOperators.java">
            <fileset file="${src.code.dir}/org/apache/vxquery/functions/BuiltinOperators.java.header"/>
            <fileset file="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinOperators.java.qnames"/>
            <fileset file="${build.gen-src.dir}/org/apache/vxquery/functions/BuiltinOperators.java.operators"/>
            <fileset file="${src.code.dir}/org/apache/vxquery/functions/BuiltinOperators.java.footer"/>
        </concat>
    </target>
    
    <target name="compile.main" depends="init, compile.gen">
        <property name="build.dependency.cache.dir" value="${build.dir}/dependency" />
        <depend srcdir="${src.code.dir}" destdir="${build.class.dir}"
                cache="${build.dependency.cache.dir}" closure="yes" />

        <javac destdir="${build.class.dir}" source="${src.java.version}"
            includeAntRuntime="no" debug="${debug}">
            <src location="${src.code.dir}"/>
            <src location="${build.gen-src.dir}"/>

            <!--compilerarg value="-Xlint:unchecked"/-->
            <classpath refid="build.classpath"/>
        </javac>
    </target>

    <target name="build" depends="compile.main">
        <mkdir dir="${build.lib.dir}"/>
        <jar destfile="${build.lib.dir}/${project.name}.jar">
            <fileset dir="${build.class.dir}">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${src.resources.dir}"/>
        </jar>

        <copy todir="${build.lib.dir}" flatten="yes">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <property name="vxq.main.class" value="org.apache.vxquery.drivers.VXQuery"/>
        <pathconvert targetos="unix" property="vxq.classpath" refid="deploy.classpath"/>
        <property name="vxq.jvm.params" value=""/>
        <copy file="${scripts.dir}/run.sh" tofile="${build.scripts.dir}/vxq">
            <filterset>
                <filter token="main.class" value="${vxq.main.class}"/>
                <filter token="classpath" value="${vxq.classpath}"/>
                <filter token="jvm.params" value="${vxq.jvm.params}"/>
            </filterset>
        </copy>
        <chmod perm="ugo+x">
            <fileset dir="${build.scripts.dir}"/>
        </chmod>
    </target>

    <target name="rebuild" depends="clean, build"/>

    <target name="buildall" depends="build, build.test"/>

    <target name="compile.test">
        <mkdir dir="${build.tests.class.dir}"/>
        <javac srcdir="${tests.code.dir}" destdir="${build.tests.class.dir}" debug="${debug}">
            <classpath refid="run.classpath"/>
        </javac>
    </target>

    <target name="build.test" depends="compile.test">
        <property name="xtest.main.class" value="org.apache.vxquery.xtest.Main"/>
        <pathconvert targetos="unix" property="xtest.classpath" refid="run.classpath"/>
        <property name="xtest.jvm.params" value=""/>
        <copy file="${scripts.dir}/run.sh" tofile="${build.scripts.dir}/xtest">
            <filterset>
                <filter token="main.class" value="${xtest.main.class}"/>
                <filter token="classpath" value="${xtest.classpath}"/>
                <filter token="jvm.params" value="${xtest.jvm.params}"/>
            </filterset>
        </copy>
        <chmod perm="ugo+x">
            <fileset dir="${build.scripts.dir}"/>
        </chmod>
    </target>

    <target name="test" depends="compile.test">
        <junit fork="true" dir="${build.tests.dir}" showoutput="false">
            <jvmarg value="-Xmx2048M"/>
            <classpath refid="run.classpath"/>
            <formatter type="plain" usefile="true"/>
            <test name="org.apache.vxquery.xmlquery.query.SimpleXQueryTest" todir="${build.tests.dir}"/>
            <test name="org.apache.vxquery.datamodel.dtm.test.DTMTest" todir="${build.tests.dir}"/>
        </junit>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="clean.tests">
        <delete dir="${build.tests.dir}"/>
    </target>
</project>
